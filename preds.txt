while True:
    text = input("Enter your line (type 'quit' to exit): ")
    text1=text
    if text == 'quit':
        break
    text = text.split(" ")
    text = text[-3:]
    predictions = []
    for i in range(3):
        predicted_words = []
        for j in range(3):
            sequence = tokenizer.texts_to_sequences([text])
            sequence = np.array(sequence)
            preds = model.predict(sequence)
            top_prediction = np.argmax(preds[0])
            predicted_word = ""
            for key, value in tokenizer.word_index.items():
                if value == top_prediction:
                    predicted_word = key
                    break
            predicted_words.append(predicted_word)
            text.append(predicted_word)
            text = text[1:]
        predictions.append(predicted_words)
    for i, words in enumerate(predictions):
        print(f"Prediction {i + 1}: {' '.join(words)}")
    selected_prediction = int(input("Please select a prediction (1, 2, or 3): "))
    selected_words = predictions[selected_prediction - 1]
    print("You selected:" + text1 + " " +  ' '.join(selected_words))
    text = text[-3:] + selected_words


text = st.text_input("Enter your line: ")
text1=text

if st.button("Predict"):
    text = text.split(" ")
    text = text[-3:]
    predictions = []
    for i in range(3):
        predicted_words = []
        for j in range(3):
            sequence = tokenizer.texts_to_sequences([text])
            sequence = np.array(sequence)
            preds = model.predict(sequence)
            top_prediction = np.argmax(preds[0])
            predicted_word = ""
            for key, value in tokenizer.word_index.items():
                if value == top_prediction:
                    predicted_word = key
                    break
            predicted_words.append(predicted_word)
            text.append(predicted_word)
            text = text[1:]
        predictions.append(predicted_words)
    for i, words in enumerate(predictions):
        st.write(f"Prediction {i + 1}: {' '.join(words)}")
    selected_prediction = st.selectbox("Please select a prediction (1, 2, or 3): " , [1,2,3])
    selected_words = predictions[selected_prediction - 1]
    st.write("You selected:" + text1 + " " +  ' '.join(selected_words))
    text = text[-3:] + selected_words


